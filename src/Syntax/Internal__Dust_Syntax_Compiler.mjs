// Generated by ReScript, PLEASE EDIT WITH CARE

import * as List from "rescript/lib/es6/list.js";

function render(tagType, tag, attrs, children) {
  var el = children ? List.fold_left((function (a, b) {
            return a + b;
          }), children.hd, children.tl) : "";
  var at = attrs ? List.fold_left((function (a, b) {
            return "" + a + b;
          }), attrs.hd, attrs.tl) : "";
  var validateHTMLTag = function (template, tag) {
    if (tag === "html") {
      return "<!DOCTYPE html>" + template;
    } else {
      return template;
    }
  };
  if (tagType) {
    return validateHTMLTag("<" + tag + at + ">" + el + "</" + tag + ">", tag);
  } else {
    return validateHTMLTag("<" + tag + at + ">", tag);
  }
}

function attrFormat(typeAttr) {
  var transform = function (prop, attr) {
    return " " + attr + "=\"" + prop + "\"";
  };
  switch (typeAttr.TAG | 0) {
    case /* AttrString */0 :
        return transform(typeAttr._0, typeAttr._1);
    case /* AttrBool */1 :
        var attr = typeAttr._0;
        if (typeAttr._1) {
          return " " + attr;
        } else {
          return transform(attr, "false");
        }
    case /* AttrInt */2 :
        return transform(typeAttr._1.toString(), typeAttr._0);
    
  }
}

export {
  render ,
  attrFormat ,
  
}
/* No side effect */
