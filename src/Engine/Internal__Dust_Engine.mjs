// Generated by ReScript, PLEASE EDIT WITH CARE

import Kleur from "kleur";
import * as JsYaml from "js-yaml";
import * as Nodefs from "node:fs";

var Kleur$1 = {};

function logMessage(msg) {
  var variant = msg.NAME;
  console.log(variant === "error" ? Kleur.bold(undefined).red("--- Oh no, we found error ---\n>> " + msg.VAL + " <<\n") : (
          variant === "warning" ? Kleur.bold(undefined).yellow("--- Just in case, warning ---\n>> " + msg.VAL + " <<\n") : Kleur.bold(undefined).blue("--- Information for you ---\n>> " + msg.VAL + " <<\n")
        ));
  
}

var ErrorMessage = {
  logMessage: logMessage
};

function checkExistFolder(folder) {
  return Nodefs.existsSync(folder);
}

function getConfig(param) {
  var configFile = JsYaml.load(Nodefs.readFileSync("dust.config.yml", "utf-8"));
  console.log(configFile.sources, configFile);
  
}

function cleanOutputFolder(folder) {
  if (Nodefs.existsSync(folder)) {
    return ;
  } else {
    Nodefs.mkdirSync(folder);
    return ;
  }
}

function run(param) {
  return getConfig(undefined);
}

getConfig(undefined);

var defaultConfig = {
  folder: {
    blog: "blog",
    output: "dist",
    static: "static",
    pages: "pages",
    base: "./"
  }
};

var getAllPages;

var getAllMD;

export {
  Kleur$1 as Kleur,
  ErrorMessage ,
  defaultConfig ,
  checkExistFolder ,
  getConfig ,
  cleanOutputFolder ,
  getAllPages ,
  getAllMD ,
  run ,
  
}
/*  Not a pure module */
